(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["PaMessageClass"],{f0b2:function(n,e,s){"use strict";s.r(e);var a,t=s("bee2"),o=s("d4ec"),p=s("257e"),i=s("262e"),r=s("2caf"),c=s("ade3"),u=s("8d35"),g=s("2fe1"),l="# PaMessage 信息提示\n\n\n### 基本使用\n\n:::demo\n\n```html\n<template>\n  <div class=\"message\">\n    <h3>在element UI 消息提示基础上新增属性maxCount：可配置该消息最大显示消息数量。默认不做限制</h3>\n    <pa-button @click=\"open\">\n      success消息提示\n    </pa-button>\n    <pa-button @click=\"open1\">\n      error消息提示\n    </pa-button>\n    <pa-button @click=\"open2\">\n      warning消息提示\n    </pa-button>\n    <pa-button @click=\"open3\">\n      normal消息提示\n    </pa-button>\n    <pa-button @click=\"open4\">\n      自定义消息提示\n    </pa-button>\n    <pa-button @click=\"open5\">\n      连续点击只显示一个的消息提示\n    </pa-button>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'Index',\n    methods: {\n      open() {\n        this.$paMessage({\n          type: 'success',\n          message: '成功出现了一个提示信息',\n          duration: 2000,\n        });\n      },\n      open1() {\n        this.$paMessage({\n          type: 'error',\n          message: '出现了一个错误提示信息',\n          duration: 2000,\n        });\n      },\n      open2() {\n        this.$paMessage({\n          type: 'warning',\n          message: '出现了一个警告提示信息',\n          duration: 2000,\n        });\n      },\n      open3() {\n        this.$paMessage({\n          message: '正常提示信息',\n          duration: 2000,\n        });\n      },\n      open4() {\n        this.$paMessage({\n          type: 'danger',\n          message: '自定义消息提示',\n          duration: 2000,\n        });\n      },\n      open5() {\n        this.$paMessage({\n          type: 'error',\n          message: '只显示一个的消息提示',\n          duration: 2000,\n          maxCount: 1,\n        });\n      },\n    },\n  };\n<\/script>\n```\n\n:::\n\n\n### Options\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| message | 消息文字 | string / VNode | — | — |\n| type | 主题 | string | success/warning/info/error | info |\n| iconClass | 自定义图标的类名，会覆盖 `type` | string | — | — |\n| dangerouslyUseHTMLString | 是否将 message 属性作为 HTML 片段处理 | boolean | — | false |\n| customClass | 自定义类名 | string | — | — |\n| duration | 显示时间, 毫秒。设为 0 则不会自动关闭 | number | — | 3000 |\n| showClose | 是否显示关闭按钮 | boolean | — | false |\n| center | 文字是否居中 | boolean | — | false |\n| onClose | 关闭时的回调函数, 参数为被关闭的 message 实例 | function | — | — |\n\n### 方法 Methods\n调用 `Message` 或 `this.$paMessage` 会返回当前 Message 的实例。如果需要手动关闭实例，可以调用它的 `close` 方法。\n\n| 方法名 | 说明 |\n| ---- | ---- |\n| close | 关闭当前的 Message |\n",b=Object(g["b"])(a=function(n){Object(i["a"])(s,n);var e=Object(r["a"])(s);function s(n){var a;return Object(o["a"])(this,s),a=e.call(this,n),Object(c["a"])(Object(p["a"])(a),"value",l),a}return Object(t["a"])(s)}(u["a"]))||a;e["default"]=b}}]);