(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["PaDialogClass"],{"43c5":function(e,n,a){"use strict";a.r(n);var l,r=a("bee2"),o=a("d4ec"),i=a("257e"),t=a("262e"),s=a("2caf"),d=a("ade3"),g=a("8d35"),m=a("2fe1"),c="<style>\n  .checkboxCss{\n    margin-bottom: -16px;\n  }\n</style>\n# PaDialog 弹窗\n\n### 基本用法\n\n#### Dialog 弹出一个对话框，适合需要定制性更大的场景\n\n:::demo\n\n```html\n<template>\n  <div class=\"demo-block\">\n    <pa-button type=\"primary\" @click=\"dialogVisible = true\">\n      点击打开对话框\n    </pa-button>\n    <pa-dialog\n      title=\"标题\"\n      :visible.sync=\"dialogVisible\"\n      :confirm-loading=\"confirmLoading\"\n      @ok=\"handleOK\"\n      @cancel=\"handleCancel\"\n    >\n      这里可以写各种复杂的DOM结构\n    </pa-dialog>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'PahmDialog',\n    data() {\n      return {\n        dialogVisible: false,\n        confirmLoading: false,\n        breadcrumbs: [\n          {\n            path: '/dialog',\n            text: '对话框',\n          },\n        ],\n        dialogVisibleFrom: false,\n        confirmLoadingFrom: false,\n        ruleForm: {\n          name: '',\n          region: '',\n          date1: '',\n          date2: '',\n          delivery: false,\n          type: [],\n          resource: '',\n          desc: '',\n        },\n        rules: {\n          name: [\n            { required: true, message: '请输入活动名称', trigger: 'blur' },\n            { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' },\n          ],\n          region: [{ required: true, message: '请选择活动区域', trigger: 'change' }],\n          date1: [{ type: 'date', required: true, message: '请选择日期', trigger: 'change' }],\n          date2: [{ type: 'date', required: true, message: '请选择时间', trigger: 'change' }],\n          type: [\n            { type: 'array', required: true, message: '请至少选择一个活动性质', trigger: 'change' },\n          ],\n          resource: [{ required: true, message: '请选择活动资源', trigger: 'change' }],\n          desc: [{ required: true, message: '请填写活动形式', trigger: 'blur' }],\n        },\n        options: [\n          {\n            value: '广东',\n            label: '广东',\n          },\n          {\n            value: '上海',\n            label: '上海',\n          },\n        ],\n      };\n    },\n    methods: {\n      handleOK() {\n        this.confirmLoading = true;\n        setTimeout(() => {\n          this.dialogVisible = false;\n          this.confirmLoading = false;\n        }, 1000);\n      },\n      handleCancel() {\n        this.dialogVisible = false;\n      },\n      formHandleOK() {\n        this.$refs.ruleForm.validate(valid => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            return false;\n          }\n        });\n      },\n      formHandleCancel() {\n        this.dialogVisibleFrom = false;\n      },\n    },\n  };\n<\/script>\n```\n\n:::\n\n### 内嵌表单\n\n:::demo\n\n```html\n<template>\n  <div class=\"demo-transfer\">\n    <div class=\"header-title\">\n      <h2>内嵌表单</h2>\n    </div>\n    <div class=\"demo-block\">\n      <pa-button type=\"primary\" @click=\"dialogVisibleFrom = true\">\n        点击打开对话框\n      </pa-button>\n      <pa-dialog\n        title=\"表单弹窗\"\n        :visible.sync=\"dialogVisibleFrom\"\n        :confirm-loading=\"confirmLoading\"\n        :destroy-on-close=\"true\"\n        top=\"100px\"\n        width=\"600px\"\n        @ok=\"formHandleOK\"\n        @cancel=\"formHandleCancel\"\n      >\n        <el-form\n          ref=\"ruleForm\"\n          :model=\"ruleForm\"\n          :rules=\"rules\"\n          label-width=\"100px\"\n          class=\"demo-ruleForm\"\n        >\n          <el-form-item label=\"活动名称\" prop=\"name\">\n            <pa-input :value.sync=\"ruleForm.name\" clearable placeholder=\"请输入活动名称\" />\n          </el-form-item>\n          <el-form-item label=\"活动区域\" prop=\"region\">\n            <pa-select\n              :value.sync=\"ruleForm.region\"\n              :options=\"options\"\n              placeholder=\"请选择活动区域\"\n              clearable\n            />\n          </el-form-item>\n          <el-form-item label=\"活动性质\" prop=\"type\">\n            <pa-checkbox-group v-model=\"ruleForm.type\" class=\"checkboxCss\">\n              <pa-checkbox label=\"美食/餐厅线上活动\" name=\"type\" />\n              <pa-checkbox label=\"地推活动\" name=\"type\" />\n              <pa-checkbox label=\"线下主题活动\" name=\"type\" />\n              <pa-checkbox label=\"单纯品牌曝光\" name=\"type\" />\n            </pa-checkbox-group>\n          </el-form-item>\n          <el-form-item label=\"特殊资源\" prop=\"resource\">\n            <pa-radio-group v-model=\"ruleForm.resource\">\n              <pa-radio label=\"线上品牌商赞助\" />\n              <pa-radio label=\"线下场地免费\" />\n            </pa-radio-group>\n          </el-form-item>\n          <el-form-item label=\"活动形式\" prop=\"desc\">\n            <pa-input type=\"textarea\" :value.sync=\"ruleForm.desc\" />\n          </el-form-item>\n        </el-form>\n      </pa-dialog>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'PahmDialog',\n    data() {\n      return {\n        dialogVisible: false,\n        confirmLoading: false,\n        breadcrumbs: [\n          {\n            path: '/dialog',\n            text: '对话框',\n          },\n        ],\n        dialogVisibleFrom: false,\n        confirmLoadingFrom: false,\n        ruleForm: {\n          name: '',\n          region: '',\n          date1: '',\n          date2: '',\n          delivery: false,\n          type: [],\n          resource: '',\n          desc: '',\n        },\n        rules: {\n          name: [\n            { required: true, message: '请输入活动名称', trigger: 'blur' },\n            { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' },\n          ],\n          region: [{ required: true, message: '请选择活动区域', trigger: 'change' }],\n          date1: [{ type: 'date', required: true, message: '请选择日期', trigger: 'change' }],\n          date2: [{ type: 'date', required: true, message: '请选择时间', trigger: 'change' }],\n          type: [\n            { type: 'array', required: true, message: '请至少选择一个活动性质', trigger: 'change' },\n          ],\n          resource: [{ required: true, message: '请选择活动资源', trigger: 'change' }],\n          desc: [{ required: true, message: '请填写活动形式', trigger: 'blur' }],\n        },\n        options: [\n          {\n            value: '广东',\n            label: '广东',\n          },\n          {\n            value: '上海',\n            label: '上海',\n          },\n        ],\n      };\n    },\n    methods: {\n      handleOK() {\n        this.confirmLoading = true;\n        setTimeout(() => {\n          this.dialogVisible = false;\n          this.confirmLoading = false;\n        }, 1000);\n      },\n      handleCancel() {\n        this.dialogVisible = false;\n      },\n      formHandleOK() {\n        this.$refs.ruleForm.validate(valid => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            return false;\n          }\n        });\n      },\n      formHandleCancel() {\n        this.dialogVisibleFrom = false;\n      },\n    },\n  };\n<\/script>\n```\n\n:::\n\n# Attributes\n\n| 属性名 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| title | string | 标题 | 标题 |\n| visible | boolean | false | 是否显示 Dialog，支持 .sync 修饰符 |\n| width | string | 400px | Dialog 的宽度 |\n| cancelButtonText | string | 取消 | 取消按钮文本 |\n| confirmButtonText | string | 确认 | 确认按钮文本 |\n| footerShow | boolean | true | 是否显示底部按钮区域 |\n| confirmLoading | boolean | false | 确认按钮加载中状态 |\n| fullscreen | boolean | false | 是否为全屏 Dialog |\n| top | string | 15vh | Dialog CSS 中的 margin-top 值 |\n| modal | boolean | true | 是否需要遮罩层 |\n| modalAppendToBody | boolean | true | 遮罩层是否插入至 body 元素上，若为 false，则遮罩层会插入至 Dialog 的父元素上 |\n| appendToBody | boolean | false | Dialog 自身是否插入至 body 元素上。嵌套的 Dialog 必须指定该属性并赋值为 true |\n| lockScroll | boolean | true | 是否在 Dialog 出现时将 body 滚动锁定 |\n| customClass | string | - | Dialog 的自定义类名 |\n| closeOnClickModal | boolean | true | 是否可以通过点击 modal 关闭 Dialog |\n| closeOnPressEscape | boolean | true | 是否可以通过按下 ESC 关闭 Dialog |\n| showClose | boolean | true | 是否显示关闭按钮 |\n| beforeClose | function(done)，done 用于关闭 Dialog |  | 关闭前的回调，会暂停 Dialog 的关闭 |\n| center | boolean | false | 关闭前的回调，会暂停 Dialog 的关闭 |\n| destroyOnClose | boolean | false | 关闭时销毁 Dialog 中的元素 |\n",u=Object(m["b"])(l=function(e){Object(t["a"])(a,e);var n=Object(s["a"])(a);function a(e){var l;return Object(o["a"])(this,a),l=n.call(this,e),Object(d["a"])(Object(i["a"])(l),"value",c),l}return Object(r["a"])(a)}(g["a"]))||l;n["default"]=u}}]);